{"ast":null,"code":"var _jsxFileName = \"/home/akshat/Documents/coding items/Blog/frontend/src/controllers/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [info, setInfo] = useState({\n    \"Email\": \"\",\n    \"password\": \"\"\n  });\n  const onHandle = e => {\n    setInfo({\n      ...info,\n      [e.target.name]: e.target.value\n    }); //(...) This is the spread operator, which copies all the existing properties of the info state into a new object. This ensures that the state is updated immutably (i.e., creating a new object rather than modifying the existing one).\n    //[e.target.name]: e.target.value: This part adds or updates a property in the object. The e.target.name becomes the key, and e.target.value becomes the corresponding value.\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    setInfo({\n      \"Email\": \"\",\n      \"password\": \"\"\n    });\n    try {\n      const response = await axios.post('/api/v1/login', info);\n      setInfo(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const filled = info.Email && info.password;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"LOGIN PAGE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Email:  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"Email\",\n        name: \"Email\",\n        placeholder: \"Your Email\",\n        onChange: onHandle,\n        value: info.Email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 108\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 114\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Password:  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Your password\",\n        onChange: onHandle,\n        value: info.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 120\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 127\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !filled,\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"XhBRmCYlAAYVxuSMTJoo2Yqe6cU=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","navigate","info","setInfo","onHandle","e","target","name","value","onSubmit","preventDefault","response","post","data","error","console","log","filled","Email","password","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","disabled","_c","$RefreshReg$"],"sources":["/home/akshat/Documents/coding items/Blog/frontend/src/controllers/login.js"],"sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { useNavigate } from 'react-router-dom'\n function Login(){\n    const navigate=useNavigate()\n    const [info,setInfo]=useState({\n        \"Email\":\"\",\n        \"password\":\"\"\n    })\n    const onHandle=(e)=>{\n        setInfo({...info,[e.target.name]:e.target.value})  //(...) This is the spread operator, which copies all the existing properties of the info state into a new object. This ensures that the state is updated immutably (i.e., creating a new object rather than modifying the existing one).\n    //[e.target.name]: e.target.value: This part adds or updates a property in the object. The e.target.name becomes the key, and e.target.value becomes the corresponding value.\n    }\n    const onSubmit=async(e)=>{\n        e.preventDefault();\n        setInfo({\n            \"Email\":\"\",\n            \"password\":\"\"\n          })\n      try {\n          const response=\n              await axios.post('/api/v1/login',info)\n          setInfo(response.data)\n          \n      }\n       catch (error) {\n        console.log(error);\n        \n      }}\n      const filled=info.Email&&info.password\n    return(\n        <>\n        <h1 style={{textAlign:\"center\"}}>LOGIN PAGE</h1>\n        <form onSubmit={onSubmit}>\n            <span>Email:  </span>\n            <input type='Email'name='Email'placeholder='Your Email'onChange={onHandle} value={info.Email}/><br /><br />\n            <span>Password:  </span>\n            <input type='password'name='password'placeholder='Your password'onChange={onHandle} value={info.password}/><br /> <br />\n            <button type='submit' disabled={!filled}>LOGIN</button>\n        </form>\n        </>\n    )\n}\nexport default Login"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}