{"ast":null,"code":"var _jsxFileName = \"/home/akshat/Documents/coding items/Blog/frontend/src/controllers/homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../css/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [post, setpost] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-image\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ga\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gap\",\n          id: \"aa\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gap\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gap\",\n          children: \"My Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gap\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gap\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: post.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.excerpt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"By \", post.author, \" on \", new Date(post.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this)]\n      }, i._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 1\n  }, this);\n}\n_s(Home, \"csZ69vRGrmm9K1eggb6gBNMQCbM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Home","_s","post","setpost","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","map","i","title","excerpt","author","Date","date","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["/home/akshat/Documents/coding items/Blog/frontend/src/controllers/homepage.js"],"sourcesContent":["import React, { useState } from'react'\nimport \"../css/style.css\"\nfunction Home(){\n  const [post,setpost]=useState([])\n    return(\n<div className=\"background-image\">\n<nav>\n  <div id='ga'>\n    <span className='gap'id='aa' >Home</span>\n    <span className='gap' >Create Post</span>\n    <span className='gap' >My Posts</span>\n    <span className='gap' >Profile</span>\n    <span className='gap' >Logout</span>\n  </div>\n</nav>\n<div>\n  {\n    post.map((i)=>(\n      <div key={i._id}>\n        <h2>{post.title}</h2>\n        <p>{post.excerpt}</p>\n      <p>By {post.author} on {new Date(post.date).toLocaleDateString()}</p>\n      </div>\n    ))\n  }\n</div>\n</div>)\n}\nexport default Home"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzB,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EAC/B,oBACJE,OAAA;IAAKK,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBACjCN,OAAA;MAAAM,QAAA,eACEN,OAAA;QAAKO,EAAE,EAAC,IAAI;QAAAD,QAAA,gBACVN,OAAA;UAAMK,SAAS,EAAC,KAAK;UAAAE,EAAE,EAAC,IAAI;UAAAD,QAAA,EAAE;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzCX,OAAA;UAAMK,SAAS,EAAC,KAAK;UAAAC,QAAA,EAAE;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzCX,OAAA;UAAMK,SAAS,EAAC,KAAK;UAAAC,QAAA,EAAE;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtCX,OAAA;UAAMK,SAAS,EAAC,KAAK;UAAAC,QAAA,EAAE;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACrCX,OAAA;UAAMK,SAAS,EAAC,KAAK;UAAAC,QAAA,EAAE;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNX,OAAA;MAAAM,QAAA,EAEIH,IAAI,CAACS,GAAG,CAAEC,CAAC,iBACTb,OAAA;QAAAM,QAAA,gBACEN,OAAA;UAAAM,QAAA,EAAKH,IAAI,CAACW;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBX,OAAA;UAAAM,QAAA,EAAIH,IAAI,CAACY;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBX,OAAA;UAAAM,QAAA,GAAG,KAAG,EAACH,IAAI,CAACa,MAAM,EAAC,MAAI,EAAC,IAAIC,IAAI,CAACd,IAAI,CAACe,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAH3DE,CAAC,CAACO,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AACN;AAACT,EAAA,CAzBQD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AA0Bb,eAAeA,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}