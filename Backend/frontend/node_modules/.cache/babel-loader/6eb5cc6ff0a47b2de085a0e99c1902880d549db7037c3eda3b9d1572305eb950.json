{"ast":null,"code":"var _jsxFileName = \"/home/akshat/Documents/coding items/Blog/frontend/src/controllers/Mypost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Mypost() {\n  _s();\n  const [post, setpost] = useState([]);\n  useEffect(() => {\n    const onHandle = async () => {\n      try {\n        const response = await axios.get('/api/v1/post/');\n        setpost(response.data.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    onHandle();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: post && Array.isArray(post) && post.length > 0 ? post.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Title: \", i.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Excerpt:\", i.excerpt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"By Author:\", i.author, \" on \", new Date(i.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Content:\", i.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)]\n      }, i._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Post Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Mypost, \"+RcMmRaknAs7o6MPNHf+ILmcPVs=\");\n_c = Mypost;\nexport { Mypost };\nvar _c;\n$RefreshReg$(_c, \"Mypost\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Mypost","_s","post","setpost","onHandle","response","get","data","error","console","log","children","Array","isArray","length","map","i","title","fileName","_jsxFileName","lineNumber","columnNumber","excerpt","author","Date","date","toLocaleDateString","content","_id","_c","$RefreshReg$"],"sources":["/home/akshat/Documents/coding items/Blog/frontend/src/controllers/Mypost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nfunction Mypost(){\n    const [post,setpost]=useState([])\n    useEffect(()=>{\n        const onHandle=async()=>{\n            try {\n                const response=await axios.get('/api/v1/post/')\n                setpost(response.data.data)\n                \n            } catch (error) {\n                console.log(error);\n                \n            }\n        }\n        onHandle()\n    },[])\n    return (\n        <>\n        <div>\n            { post &&Array.isArray(post) &&post.length>0?(\n                post.map((i)=>(\n                    <div key={i._id}>\n                         <h1>Title: {i.title}</h1>\n        <h3>Excerpt:{i.excerpt}</h3>\n        <h3>By Author:{i.author} on {new Date(i.date).toLocaleDateString()}</h3>\n        <h3>Content:{i.content}</h3>\n                    </div>\n                ))\n       )\n    :(<p>No Post Available</p>)}\n        </div>\n      \n\n        </>\n    )\n}\nexport {Mypost}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACzB,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EACjCD,SAAS,CAAC,MAAI;IACV,MAAMW,QAAQ,GAAC,MAAAA,CAAA,KAAS;MACpB,IAAI;QACA,MAAMC,QAAQ,GAAC,MAAMV,KAAK,CAACW,GAAG,CAAC,eAAe,CAAC;QAC/CH,OAAO,CAACE,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;MAE/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAEtB;IACJ,CAAC;IACDJ,QAAQ,CAAC,CAAC;EACd,CAAC,EAAC,EAAE,CAAC;EACL,oBACIP,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACAd,OAAA;MAAAc,QAAA,EACMT,IAAI,IAAGU,KAAK,CAACC,OAAO,CAACX,IAAI,CAAC,IAAGA,IAAI,CAACY,MAAM,GAAC,CAAC,GACxCZ,IAAI,CAACa,GAAG,CAAEC,CAAC,iBACPnB,OAAA;QAAAc,QAAA,gBACKd,OAAA;UAAAc,QAAA,GAAI,SAAO,EAACK,CAAC,CAACC,KAAK;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1CxB,OAAA;UAAAc,QAAA,GAAI,UAAQ,EAACK,CAAC,CAACM,OAAO;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5BxB,OAAA;UAAAc,QAAA,GAAI,YAAU,EAACK,CAAC,CAACO,MAAM,EAAC,MAAI,EAAC,IAAIC,IAAI,CAACR,CAAC,CAACS,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxExB,OAAA;UAAAc,QAAA,GAAI,UAAQ,EAACK,CAAC,CAACW,OAAO;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAJNL,CAAC,CAACY,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACR,CAAC,gBAEZxB,OAAA;QAAAc,QAAA,EAAG;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC,gBAGJ,CAAC;AAEX;AAACpB,EAAA,CAlCQD,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAmCf,SAAQA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}