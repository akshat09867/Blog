{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import'../css/style.css';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Mypost(){const navigate=useNavigate();const[isUpdating,setisUpdating]=useState(false);const[post,setPost]=useState([]);const[editedp,setEditedp]=useState(null);const[datas,setDatas]=useState({title:'',excerpt:'',content:'',date:''});useEffect(()=>{const onHandle=async()=>{try{const response=await axios.get('/api/v1/post/');setPost(response.data.data);}catch(error){console.log(error);}};onHandle();},[]);const handleInput=e=>{setDatas({...datas,[e.target.name]:e.target.value});};const handleUpdate=async(post_id,updatedData)=>{try{const response=await axios.put(`/api/v1/post/updatepost/${post_id}`,updatedData,{headers:{Authorization:`Bearer ${localStorage.getItem('token')}`// If using JWT\n}});if(response.status===200){setPost(prevPosts=>prevPosts.map(p=>p._id===post_id?response.data.data:p));setEditedp(null);}else{console.error(response.status);}}catch(error){console.error(\"Error updating post\",error);}finally{setisUpdating(false);}};function handleSubmit(post_id){if(datas.title&&datas.content){handleUpdate(post_id,datas);}else{console.error(\"Title and Content are required fields\");}};const handleDelete=async postId=>{try{const response=await axios.delete(`/api/v1/post/${postId}`,{headers:{Authorization:`Bearer ${localStorage.getItem('token')}`// If using JWT\n}});if(response.status===200){setPost(prevPosts=>prevPosts.filter(p=>p._id!==postId));alert(response.data.message);}else{throw new Error('Failed to delete the post');}}catch(error){console.error(error);alert(error.message);}};const handleEdit=postItem=>{setisUpdating(true);setEditedp(postItem._id);setDatas({title:postItem.title||'',excerpt:postItem.excerpt||'',content:postItem.content||'',date:postItem.date||''});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:post&&Array.isArray(post)&&post.length>0?post.map(postItem=>/*#__PURE__*/_jsx(\"span\",{className:\"tt\",children:/*#__PURE__*/_jsx(\"div\",{className:\"image-container \",children:/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:editedp===postItem._id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Title:\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{name:\"title\",value:datas.title,onChange:handleInput,placeholder:\"Title\",className:\"text\"}),\"  \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{children:\"Excerpt:\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{name:\"excerpt\",value:datas.excerpt,onChange:handleInput,placeholder:\"Excerpt\",className:\"text\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{children:\"Content:\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{name:\"content\",value:datas.content,onChange:handleInput,placeholder:\"Content\",className:\"text\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{children:\"Date:\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"date\",value:datas.date,onChange:handleInput,placeholder:\"date\"}),/*#__PURE__*/_jsx(\"button\",{className:\"content-text\",onClick:()=>handleSubmit(postItem._id),children:\"Save Changes\"})]}):/*#__PURE__*/_jsx(_Fragment,{children:postItem?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Title: \",postItem.title]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Excerpt: \",postItem.excerpt]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Content: \",postItem.content]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"By Author: \",postItem.author.Name,\" on \",new Date(postItem.date).toLocaleDateString()]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(postItem._id),className:\"content-text\",children:\"Delete This Post\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEdit(postItem),className:\"content-text\",children:\"Update This Post\"})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Post data is missing or incomplete\"})})})})},postItem._id)):/*#__PURE__*/_jsx(\"h1\",{children:\"No Post Available\"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"g\",disabled:isUpdating,onClick:()=>navigate('/api/v1/users/home'),children:\"Home\"})]});}export{Mypost};","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Mypost","navigate","isUpdating","setisUpdating","post","setPost","editedp","setEditedp","datas","setDatas","title","excerpt","content","date","onHandle","response","get","data","error","console","log","handleInput","e","target","name","value","handleUpdate","post_id","updatedData","put","headers","Authorization","localStorage","getItem","status","prevPosts","map","p","_id","handleSubmit","handleDelete","postId","delete","filter","alert","message","Error","handleEdit","postItem","children","Array","isArray","length","className","onChange","placeholder","type","onClick","author","Name","Date","toLocaleDateString","disabled"],"sources":["/home/akshat/Documents/coding items/PersonalBlog/Backend/frontend/src/controllers/Mypost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/style.css';\n\nfunction Mypost() {\n    const navigate = useNavigate();\n    const [isUpdating,setisUpdating]=useState(false)\n    const [post, setPost] = useState([]);\n    const [editedp, setEditedp] = useState(null);\n    const [datas, setDatas] = useState({\n        title: '',\n        excerpt: '',\n        content: '',\n        date: '',\n    });\n\n    useEffect(() => {\n        const onHandle = async () => {\n            try {\n                const response = await axios.get('/api/v1/post/');\n                setPost(response.data.data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        onHandle();\n    }, []);\n\n    const handleInput = (e) => {\n        setDatas({ ...datas, [e.target.name]: e.target.value });\n    };\n\n    const handleUpdate = async (post_id, updatedData) => {\n        try {\n            const response = await axios.put(`/api/v1/post/updatepost/${post_id}`, updatedData, {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('token')}`, // If using JWT\n                },\n            });\n            if (response.status === 200) {\n                setPost((prevPosts) => \n                    prevPosts.map((p) => (p._id === post_id ? response.data.data : p))\n                );\n                setEditedp(null);\n            } else {\n                console.error(response.status);\n            }\n        } catch (error) {\n            console.error(\"Error updating post\", error);\n        }\n        finally{\n            setisUpdating(false)\n        }\n    };\n\n    function handleSubmit(post_id){\n        if (datas.title && datas.content) {\n            handleUpdate(post_id, datas);\n        } else {\n            console.error(\"Title and Content are required fields\");\n        }\n    };\n\n    const handleDelete = async (postId) => {\n        try {\n            const response = await axios.delete(`/api/v1/post/${postId}`, {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('token')}`, // If using JWT\n                },\n            });\n\n            if (response.status === 200) {\n                setPost((prevPosts) => prevPosts.filter((p) => p._id !== postId));\n                alert(response.data.message);\n            } else {\n                throw new Error('Failed to delete the post');\n            }\n        } catch (error) {\n            console.error(error);\n            alert(error.message);\n        }\n    };\n\n    const handleEdit = (postItem) => {\n        setisUpdating(true)\n        setEditedp(postItem._id);\n        setDatas({\n            title: postItem.title || '',\n            excerpt: postItem.excerpt || '',\n            content: postItem.content || '',\n            date: postItem.date || '',\n        });\n    };\n    \n\n    return (\n        <>\n            <div>\n                {post && Array.isArray(post) && post.length > 0 ? (\n                    post.map((postItem) => (\n                        <span className='tt' key={postItem._id}>\n                            <div className=\"image-container \">\n                                <div className=\"content\">\n                                    {editedp === postItem._id? (\n                                        <>\n                                           <span>Title:</span> <br /><textarea\n                                                name=\"title\"\n                                                value={datas.title}\n                                                onChange={handleInput}\n                                                placeholder=\"Title\"\n                                                className='text'\n                                            />  <br />\n                                        <span>Excerpt:</span> <br />\n                                            <textarea\n                                                name=\"excerpt\"\n                                                value={datas.excerpt}\n                                                onChange={handleInput}\n                                                placeholder=\"Excerpt\"\n                                                className='text'\n                                            /> <br />\n                                            <span>Content:</span> <br />\n                                            <textarea\n                                                name=\"content\"\n                                                value={datas.content}\n                                                onChange={handleInput}\n                                                placeholder=\"Content\"\n                                                className='text'\n                                            /> <br />\n                                            <span>Date:</span> <br />\n                                            <input \n                                            type='date'\n                                              name=\"date\"\n                                              value={datas.date}\n                                              onChange={handleInput}\n                                              placeholder=\"date\"/>\n                                            <button className=\"content-text\" onClick={() => handleSubmit(postItem._id)}>Save Changes</button>\n                                        </>\n                                    ) : (\n                                        <>\n                                            {postItem ? (\n                                                <>\n                                                    <h1>Title: {postItem.title}</h1>\n                                                    <h3>Excerpt: {postItem.excerpt}</h3>\n                                                    <p >Content: {postItem.content}</p>\n                                                    <h3>By Author: {postItem.author.Name} on {new Date(postItem.date).toLocaleDateString()}</h3>\n                                                    <button onClick={() => handleDelete(postItem._id)} className=\"content-text\">Delete This Post</button>\n                                                    <button onClick={() => handleEdit(postItem)} className=\"content-text\">Update This Post</button>\n                                                </>\n                                            ) : (\n                                                <p>Post data is missing or incomplete</p>\n                                            )}\n                                        </>\n                                    )}\n                                </div>\n                            </div>\n                        </span>\n                    ))\n                ) : (\n                    <h1>No Post Available</h1>\n                )}\n            </div>\n            <br /><br />\n            <button className='g'disabled={isUpdating} onClick={() => navigate('/api/v1/users/home')}>Home</button>\n        </>\n    );\n}\n\nexport { Mypost };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}